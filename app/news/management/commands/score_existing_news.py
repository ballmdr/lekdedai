from django.core.management.base import BaseCommand
from django.db import transaction
from news.models import NewsArticle
from news.news_analyzer import NewsAnalyzer

class Command(BaseCommand):
    help = 'р╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╣Бр╕ер╕░р╣Гр╕лр╣Йр╕Др╕░р╣Бр╕Щр╕Щр╕Вр╣Ир╕▓р╕зр╣Ар╕Бр╣Ир╕▓р╕Чр╕╡р╣Ир╕бр╕╡р╕нр╕вр╕╣р╣Ир╕Фр╣Йр╕зр╕вр╕гр╕░р╕Ър╕Ър╣Гр╕лр╕бр╣И'

    def add_arguments(self, parser):
        parser.add_argument(
            '--limit',
            type=int,
            default=50,
            help='р╕Ир╕│р╕Щр╕зр╕Щр╕Вр╣Ир╕▓р╕зр╕Чр╕╡р╣Ир╕Ир╕░р╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕ер╕Хр╣Ир╕нр╕Др╕гр╕▒р╣Йр╕З (default: 50)'
        )
        
        parser.add_argument(
            '--force',
            action='store_true',
            help='р╕Ър╕▒р╕Зр╕Др╕▒р╕Ър╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕ер╕Вр╣Ир╕▓р╕зр╕Чр╕╡р╣Ир╕бр╕╡р╕Др╕░р╣Бр╕Щр╕Щр╣Бр╕ер╣Йр╕з'
        )

    def handle(self, *args, **options):
        limit = options['limit']
        force = options['force']
        
        self.stdout.write(
            self.style.SUCCESS(f'ЁЯЪА р╣Ар╕гр╕┤р╣Ир╕бр╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╕Вр╣Ир╕▓р╕зр╕Фр╣Йр╕зр╕вр╕гр╕░р╕Ър╕Ър╣Гр╕лр╕бр╣И (р╕Ир╕│р╕Бр╕▒р╕Ф {limit} р╕Вр╣Ир╕▓р╕з)')
        )
        
        # р╕Хр╕▒р╕зр╕Бр╕гр╕нр╕Зр╕Вр╣Ир╕▓р╕з
        if force:
            # р╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕ер╕Вр╣Ир╕▓р╕зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
            queryset = NewsArticle.objects.filter(status='published')
            self.stdout.write('тЪая╕П  р╣Вр╕лр╕бр╕Фр╕Ър╕▒р╕Зр╕Др╕▒р╕Ъ: р╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕ер╕Вр╣Ир╕▓р╕зр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф')
        else:
            # р╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕ер╣Ар╕Йр╕Юр╕▓р╕░р╕Вр╣Ир╕▓р╕зр╕Чр╕╡р╣Ир╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡р╕Др╕░р╣Бр╕Щр╕Щ
            queryset = NewsArticle.objects.filter(
                status='published',
                lottery_relevance_score=0
            )
            
        articles = queryset.order_by('-published_date')[:limit]
        
        if not articles:
            self.stdout.write(
                self.style.WARNING('тЭМ р╣Др╕бр╣Ир╕бр╕╡р╕Вр╣Ир╕▓р╕зр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕е')
            )
            return
            
        self.stdout.write(f'ЁЯУ░ р╕Юр╕Ър╕Вр╣Ир╕▓р╕зр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕е: {articles.count()} р╕Вр╣Ир╕▓р╕з')
        
        # р╣Ар╕гр╕┤р╣Ир╕бр╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕е
        analyzer = NewsAnalyzer()
        processed_count = 0
        error_count = 0
        
        # р╕кр╕Цр╕┤р╕Хр╕┤р╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И
        category_stats = {
            'accident': 0,
            'celebrity': 0, 
            'economic': 0,
            'general': 0
        }
        
        for article in articles:
            try:
                with transaction.atomic():
                    self.stdout.write(f'ЁЯФН р╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣М: {article.title[:50]}...')
                    
                    # р╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╕Фр╣Йр╕зр╕вр╕гр╕░р╕Ър╕Ър╣Гр╕лр╕бр╣И
                    analysis_result = analyzer.analyze_article(article)
                    
                    # р╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Гр╕Щр╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕е
                    article.lottery_relevance_score = analysis_result['confidence']
                    article.lottery_category = analysis_result.get('category', 'general')
                    
                    # р╕нр╕▒р╕Ыр╣Ар╕Фр╕Хр╣Ар╕ер╕Вр╕Чр╕╡р╣Ир╕кр╕Бр╕▒р╕Фр╣Др╕Фр╣Й (р╕Цр╣Йр╕▓р╕бр╕╡)
                    if analysis_result['numbers']:
                        article.extracted_numbers = ','.join(analysis_result['numbers'][:10])
                    
                    article.save(update_fields=[
                        'lottery_relevance_score', 
                        'lottery_category',
                        'extracted_numbers'
                    ])
                    
                    # р╕Щр╕▒р╕Ър╕кр╕Цр╕┤р╕Хр╕┤
                    category_stats[article.lottery_category] += 1
                    processed_count += 1
                    
                    # р╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М
                    self.stdout.write(
                        f'тЬЕ р╕Др╕░р╣Бр╕Щр╕Щ: {article.lottery_relevance_score} '
                        f'р╕лр╕бр╕зр╕Ф: {article.lottery_category} '
                        f'р╣Ар╕ер╕В: {len(analysis_result["numbers"])}'
                    )
                    
            except Exception as e:
                error_count += 1
                self.stdout.write(
                    self.style.ERROR(f'тЭМ р╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф: {article.title[:30]}... - {str(e)}')
                )
                continue
        
        # р╕кр╕гр╕╕р╕Ыр╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М
        self.stdout.write('\n' + '='*50)
        self.stdout.write(
            self.style.SUCCESS(f'ЁЯОп р╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕ер╣Ар╕кр╕гр╣Зр╕Ир╕кр╕┤р╣Йр╕Щ!')
        )
        self.stdout.write(f'тЬЕ р╕кр╕│р╣Ар╕гр╣Зр╕И: {processed_count} р╕Вр╣Ир╕▓р╕з')
        self.stdout.write(f'тЭМ р╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф: {error_count} р╕Вр╣Ир╕▓р╕з')
        
        # р╕кр╕Цр╕┤р╕Хр╕┤р╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И
        self.stdout.write('\nЁЯУК р╕кр╕Цр╕┤р╕Хр╕┤р╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И:')
        for category, count in category_stats.items():
            if count > 0:
                category_name = {
                    'accident': 'ЁЯФе р╕нр╕╕р╕Ър╕▒р╕Хр╕┤р╣Ар╕лр╕Хр╕╕',
                    'celebrity': 'тнР р╕Др╕Щр╕Фр╕▒р╕З',
                    'economic': 'ЁЯУИ р╣Ар╕ир╕гр╕йр╕Рр╕Бр╕┤р╕И',
                    'general': 'ЁЯУ░ р╕Чр╕▒р╣Ир╕зр╣Др╕Ы'
                }.get(category, category)
                
                self.stdout.write(f'  {category_name}: {count} р╕Вр╣Ир╕▓р╕з')
        
        # р╕Вр╣Йр╕нр╣Ар╕кр╕Щр╕нр╣Бр╕Щр╕░
        high_score_count = NewsArticle.objects.filter(
            lottery_relevance_score__gte=80
        ).count()
        
        if high_score_count > 0:
            self.stdout.write(
                self.style.SUCCESS(f'\nЁЯОЙ р╕бр╕╡р╕Вр╣Ир╕▓р╕зр╕Др╕░р╣Бр╕Щр╕Щр╕кр╕╣р╕З (тЙе80): {high_score_count} р╕Вр╣Ир╕▓р╕з')
            )
        else:
            self.stdout.write(
                self.style.WARNING('\nтЪая╕П  р╣Др╕бр╣Ир╕бр╕╡р╕Вр╣Ир╕▓р╕зр╕Др╕░р╣Бр╕Щр╕Щр╕кр╕╣р╕З р╣Бр╕Щр╕░р╕Щр╕│р╣Гр╕лр╣Йр╣Ар╕Юр╕┤р╣Ир╕бр╕Вр╣Ир╕▓р╕зр╕нр╕╕р╕Ър╕▒р╕Хр╕┤р╣Ар╕лр╕Хр╕╕р╕лр╕гр╕╖р╕нр╕Др╕Щр╕Фр╕▒р╕З')
            )