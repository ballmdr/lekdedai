from django.core.management.base import BaseCommand
from django.utils.text import slugify
from lucky_spots.models import Region, Province, LocationCategory, LuckyLocation


class Command(BaseCommand):
    help = 'Add sample lucky locations data'

    def handle(self, *args, **options):
        self.stdout.write('Adding sample lucky spots data...')
        
        # Create regions
        regions_data = [
            ('north', '‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠'),
            ('central', '‡∏†‡∏≤‡∏Ñ‡∏Å‡∏•‡∏≤‡∏á'),
            ('northeast', '‡∏†‡∏≤‡∏Ñ‡∏≠‡∏µ‡∏™‡∏≤‡∏ô'),
            ('south', '‡∏†‡∏≤‡∏Ñ‡πÉ‡∏ï‡πâ'),
            ('east', '‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏≠‡∏≠‡∏Å'),
            ('west', '‡∏†‡∏≤‡∏Ñ‡∏ï‡∏∞‡∏ß‡∏±‡∏ô‡∏ï‡∏Å'),
        ]
        
        for region_code, region_name in regions_data:
            region, created = Region.objects.get_or_create(name=region_code)
            if created:
                self.stdout.write(f'Created region: {region_name}')
        
        # Create provinces
        provinces_data = [
            # ‡∏†‡∏≤‡∏Ñ‡∏Å‡∏•‡∏≤‡∏á
            ('‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£', 'central'),
            ('‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤', 'central'),
            ('‡∏•‡∏û‡∏ö‡∏∏‡∏£‡∏µ', 'central'),
            ('‡∏™‡∏¥‡∏á‡∏´‡πå‡∏ö‡∏∏‡∏£‡∏µ', 'central'),
            ('‡∏≠‡πà‡∏≤‡∏á‡∏ó‡∏≠‡∏á', 'central'),
            ('‡∏™‡∏∏‡∏û‡∏£‡∏£‡∏ì‡∏ö‡∏∏‡∏£‡∏µ', 'central'),
            ('‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°', 'central'),
            ('‡∏Å‡∏≤‡∏ç‡∏à‡∏ô‡∏ö‡∏∏‡∏£‡∏µ', 'central'),
            ('‡∏£‡∏≤‡∏ä‡∏ö‡∏∏‡∏£‡∏µ', 'central'),
            ('‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏∏‡∏£‡∏µ', 'central'),
            ('‡∏õ‡∏£‡∏∞‡∏à‡∏ß‡∏ö‡∏Ñ‡∏µ‡∏£‡∏µ‡∏Ç‡∏±‡∏ô‡∏ò‡πå', 'central'),
            
            # ‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠
            ('‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà', 'north'),
            ('‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡∏£‡∏≤‡∏¢', 'north'),
            ('‡∏•‡∏≥‡∏õ‡∏≤‡∏á', 'north'),
            ('‡∏•‡∏≥‡∏û‡∏π‡∏ô', 'north'),
            ('‡πÅ‡∏°‡πà‡∏Æ‡πà‡∏≠‡∏á‡∏™‡∏≠‡∏ô', 'north'),
            ('‡∏ô‡πà‡∏≤‡∏ô', 'north'),
            ('‡∏û‡∏∞‡πÄ‡∏¢‡∏≤', 'north'),
            ('‡πÅ‡∏û‡∏£‡πà', 'north'),
            ('‡∏™‡∏∏‡πÇ‡∏Ç‡∏ó‡∏±‡∏¢', 'north'),
            ('‡∏ï‡∏≤‡∏Å', 'north'),
            ('‡∏≠‡∏∏‡∏ï‡∏£‡∏î‡∏¥‡∏ï‡∏ñ‡πå', 'north'),
            ('‡∏û‡∏¥‡∏©‡∏ì‡∏∏‡πÇ‡∏•‡∏Å', 'north'),
            ('‡∏û‡∏¥‡∏à‡∏¥‡∏ï‡∏£', 'north'),
            ('‡πÄ‡∏û‡∏ä‡∏£‡∏ö‡∏π‡∏£‡∏ì‡πå', 'north'),
            ('‡∏Å‡∏≥‡πÅ‡∏û‡∏á‡πÄ‡∏û‡∏ä‡∏£', 'north'),
            ('‡∏ô‡∏Ñ‡∏£‡∏™‡∏ß‡∏£‡∏£‡∏Ñ‡πå', 'north'),
            ('‡∏≠‡∏∏‡∏ó‡∏±‡∏¢‡∏ò‡∏≤‡∏ô‡∏µ', 'north'),
            
            # ‡∏†‡∏≤‡∏Ñ‡∏≠‡∏µ‡∏™‡∏≤‡∏ô
            ('‡∏ô‡∏Ñ‡∏£‡∏£‡∏≤‡∏ä‡∏™‡∏µ‡∏°‡∏≤', 'northeast'),
            ('‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå', 'northeast'),
            ('‡∏™‡∏∏‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå', 'northeast'),
            ('‡∏®‡∏µ‡∏™‡∏∞‡πÄ‡∏Å‡∏©', 'northeast'),
            ('‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ', 'northeast'),
            ('‡∏¢‡πÇ‡∏™‡∏ò‡∏£', 'northeast'),
            ('‡∏ä‡∏±‡∏¢‡∏†‡∏π‡∏°‡∏¥', 'northeast'),
            ('‡∏≠‡∏≥‡∏ô‡∏≤‡∏à‡πÄ‡∏à‡∏£‡∏¥‡∏ç', 'northeast'),
            ('‡∏´‡∏ô‡∏≠‡∏á‡∏ö‡∏±‡∏ß‡∏•‡∏≥‡∏†‡∏π', 'northeast'),
            ('‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô', 'northeast'),
            ('‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ', 'northeast'),
            ('‡πÄ‡∏•‡∏¢', 'northeast'),
            ('‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢', 'northeast'),
            ('‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°', 'northeast'),
            ('‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î', 'northeast'),
            ('‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå', 'northeast'),
            ('‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£', 'northeast'),
            ('‡∏ô‡∏Ñ‡∏£‡∏û‡∏ô‡∏°', 'northeast'),
            ('‡∏°‡∏∏‡∏Å‡∏î‡∏≤‡∏´‡∏≤‡∏£', 'northeast'),
            ('‡∏ö‡∏∂‡∏á‡∏Å‡∏≤‡∏¨', 'northeast'),
            
            # ‡∏†‡∏≤‡∏Ñ‡πÉ‡∏ï‡πâ
            ('‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏ò‡∏£‡∏£‡∏°‡∏£‡∏≤‡∏ä', 'south'),
            ('‡∏Å‡∏£‡∏∞‡∏ö‡∏µ‡πà', 'south'),
            ('‡∏û‡∏±‡∏á‡∏á‡∏≤', 'south'),
            ('‡∏†‡∏π‡πÄ‡∏Å‡πá‡∏ï', 'south'),
            ('‡∏™‡∏∏‡∏£‡∏≤‡∏©‡∏é‡∏£‡πå‡∏ò‡∏≤‡∏ô‡∏µ', 'south'),
            ('‡∏£‡∏∞‡∏ô‡∏≠‡∏á', 'south'),
            ('‡∏ä‡∏∏‡∏°‡∏û‡∏£', 'south'),
            ('‡∏™‡∏á‡∏Ç‡∏•‡∏≤', 'south'),
            ('‡∏™‡∏ï‡∏π‡∏•', 'south'),
            ('‡∏ï‡∏£‡∏±‡∏á', 'south'),
            ('‡∏û‡∏±‡∏ó‡∏•‡∏∏‡∏á', 'south'),
            ('‡∏õ‡∏±‡∏ï‡∏ï‡∏≤‡∏ô‡∏µ', 'south'),
            ('‡∏¢‡∏∞‡∏•‡∏≤', 'south'),
            ('‡∏ô‡∏£‡∏≤‡∏ò‡∏¥‡∏ß‡∏≤‡∏™', 'south'),
        ]
        
        for province_name, region_code in provinces_data:
            region = Region.objects.get(name=region_code)
            province, created = Province.objects.get_or_create(
                name=province_name, 
                defaults={'region': region}
            )
            if created:
                self.stdout.write(f'Created province: {province_name}')
        
        # Create categories
        categories_data = [
            ('temple', '‡∏ß‡∏±‡∏î', 'üèõÔ∏è'),
            ('shrine', '‡∏®‡∏≤‡∏•‡πÄ‡∏à‡πâ‡∏≤', '‚õ©Ô∏è'),
            ('sacred_tree', '‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå', 'üå≥'),
            ('naga', '‡∏û‡∏ç‡∏≤‡∏ô‡∏≤‡∏Ñ', 'üêç'),
            ('mysterious', '‡∏™‡∏¥‡πà‡∏á‡∏•‡∏µ‡πâ‡∏•‡∏±‡∏ö', '‚ú®'),
            ('cave', '‡∏ñ‡πâ‡∏≥', 'üï≥Ô∏è'),
            ('mountain', '‡∏†‡∏π‡πÄ‡∏Ç‡∏≤', '‚õ∞Ô∏è'),
            ('river', '‡πÅ‡∏°‡πà‡∏ô‡πâ‡∏≥/‡∏•‡∏≥‡∏ò‡∏≤‡∏£', 'üèûÔ∏è'),
            ('other', '‡∏≠‡∏∑‡πà‡∏ô‡πÜ', 'üìç'),
        ]
        
        for category_code, category_name, icon in categories_data:
            category, created = LocationCategory.objects.get_or_create(
                name=category_code,
                defaults={'icon': icon}
            )
            if created:
                self.stdout.write(f'Created category: {category_name}')
        
        # Create sample locations
        sample_locations = [
            {
                'name': '‡∏ß‡∏±‡∏î‡∏û‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß',
                'description': '‡∏ß‡∏±‡∏î‡∏û‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏ß‡∏±‡∏î‡∏û‡∏£‡∏∞‡∏®‡∏£‡∏µ‡∏£‡∏±‡∏ï‡∏ô‡∏®‡∏≤‡∏™‡∏î‡∏≤‡∏£‡∏≤‡∏° ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏£‡∏∞‡∏≠‡∏≤‡∏£‡∏≤‡∏°‡∏´‡∏•‡∏ß‡∏á‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏û‡∏£‡∏∞‡∏ö‡∏£‡∏°‡∏°‡∏´‡∏≤‡∏£‡∏≤‡∏ä‡∏ß‡∏±‡∏á ‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡∏≤‡∏ô‡∏û‡∏£‡∏∞‡∏û‡∏∏‡∏ó‡∏ò‡∏°‡∏´‡∏≤‡∏°‡∏ì‡∏µ‡∏£‡∏±‡∏ï‡∏ô‡∏õ‡∏è‡∏¥‡∏°‡∏≤‡∏Å‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏û‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß‡∏°‡∏£‡∏Å‡∏ï ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏£‡∏∞‡∏û‡∏∏‡∏ó‡∏ò‡∏£‡∏π‡∏õ‡∏Ñ‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏Ñ‡∏π‡πà‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡πÑ‡∏ó‡∏¢ ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤‡∏≠‡∏±‡∏ô‡∏¢‡∏≤‡∏ß‡∏ô‡∏≤‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡∏Ñ‡∏ô‡∏ô‡∏¥‡∏¢‡∏°‡∏°‡∏≤‡∏Ç‡∏≠‡∏û‡∏£‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î',
                'latitude': 13.7540,
                'longitude': 100.4925,
                'address': '‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
                'province': '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
                'category': 'temple',
                'lucky_numbers': '007, 123, 456',
                'highlights': '‡∏û‡∏£‡∏∞‡πÅ‡∏Å‡πâ‡∏ß‡∏°‡∏£‡∏Å‡∏ï, ‡∏û‡∏£‡∏∞‡∏≠‡∏≤‡∏£‡∏≤‡∏°‡∏´‡∏•‡∏ß‡∏á‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏≠‡∏Å, ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏≤‡∏ï‡∏¥',
            },
            {
                'name': '‡∏®‡∏≤‡∏•‡πÄ‡∏à‡πâ‡∏≤‡∏û‡πà‡∏≠‡πÄ‡∏™‡∏∑‡∏≠',
                'description': '‡∏®‡∏≤‡∏•‡πÄ‡∏à‡πâ‡∏≤‡∏û‡πà‡∏≠‡πÄ‡∏™‡∏∑‡∏≠ ‡πÄ‡∏õ‡πá‡∏ô‡∏®‡∏≤‡∏•‡πÄ‡∏à‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î ‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£ ‡∏ú‡∏π‡πâ‡∏Ñ‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡πÄ‡∏à‡πâ‡∏≤‡∏û‡πà‡∏≠‡πÄ‡∏™‡∏∑‡∏≠‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÇ‡∏ä‡∏Ñ‡∏•‡∏≤‡∏†‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô‡∏°‡∏≤‡∏Ç‡∏≠‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î‡πÅ‡∏•‡∏∞‡πÑ‡∏î‡πâ‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á',
                'latitude': 13.7307,
                'longitude': 100.5418,
                'address': '‡∏ß‡∏±‡∏í‡∏ô‡∏≤ ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
                'province': '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
                'category': 'shrine',
                'lucky_numbers': '168, 888, 999',
                'highlights': '‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î‡πÅ‡∏°‡πà‡∏ô, ‡πÄ‡∏à‡πâ‡∏≤‡∏û‡πà‡∏≠‡πÄ‡∏™‡∏∑‡∏≠, ‡πÇ‡∏ä‡∏Ñ‡∏•‡∏≤‡∏†‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô',
            },
            {
                'name': '‡∏ß‡∏±‡∏î‡πÑ‡∏£‡πà‡∏Ç‡∏¥‡∏á',
                'description': '‡∏ß‡∏±‡∏î‡πÑ‡∏£‡πà‡∏Ç‡∏¥‡∏á ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏£‡∏∞‡∏≠‡∏≤‡∏£‡∏≤‡∏°‡∏´‡∏•‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏®‡∏≤‡∏™‡∏ï‡∏£‡πå‡∏¢‡∏≤‡∏ß‡∏ô‡∏≤‡∏ô ‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏° ‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡∏≤‡∏ô‡∏≠‡∏á‡∏Ñ‡πå‡∏û‡∏£‡∏∞‡∏õ‡∏ê‡∏°‡πÄ‡∏à‡∏î‡∏µ‡∏¢‡πå ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏£‡∏∞‡πÄ‡∏à‡∏î‡∏µ‡∏¢‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏Å‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢ ‡∏ô‡∏±‡∏Å‡∏ó‡πà‡∏≠‡∏á‡πÄ‡∏ó‡∏µ‡πà‡∏¢‡∏ß‡πÅ‡∏•‡∏∞‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏®‡∏£‡∏±‡∏ó‡∏ò‡∏≤‡∏°‡∏±‡∏Å‡∏°‡∏≤‡∏Å‡∏£‡∏≤‡∏ö‡πÑ‡∏´‡∏ß‡πâ‡∏Ç‡∏≠‡∏û‡∏£‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î',
                'latitude': 13.8199,
                'longitude': 100.0607,
                'address': '‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏° ‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
                'province': '‡∏ô‡∏Ñ‡∏£‡∏õ‡∏ê‡∏°',
                'category': 'temple',
                'lucky_numbers': '028, 108, 555',
                'highlights': '‡∏û‡∏£‡∏∞‡∏õ‡∏ê‡∏°‡πÄ‡∏à‡∏î‡∏µ‡∏¢‡πå, ‡∏û‡∏£‡∏∞‡∏≠‡∏≤‡∏£‡∏≤‡∏°‡∏´‡∏•‡∏ß‡∏á, ‡∏û‡∏£‡∏∞‡πÄ‡∏à‡∏î‡∏µ‡∏¢‡πå‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏Å‡πà‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î',
            },
            {
                'name': '‡∏ï‡πâ‡∏ô‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡∏ß‡∏±‡∏î‡∏°‡∏´‡∏≤‡∏ò‡∏≤‡∏ï‡∏∏',
                'description': '‡∏ï‡πâ‡∏ô‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ô‡∏ß‡∏±‡∏î‡∏°‡∏´‡∏≤‡∏ò‡∏≤‡∏ï‡∏∏ ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤ ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡πÇ‡∏û‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏≤‡∏¢‡∏∏‡∏´‡∏•‡∏≤‡∏¢‡∏£‡πâ‡∏≠‡∏¢‡∏õ‡∏µ ‡∏°‡∏µ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏≤‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡∏ú‡∏π‡πâ‡∏Ñ‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏°‡∏≤‡∏Å‡∏£‡∏≤‡∏ö‡πÑ‡∏´‡∏ß‡πâ‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏û‡∏£‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏¥‡∏£‡∏¥‡∏°‡∏á‡∏Ñ‡∏•',
                'latitude': 14.3587,
                'longitude': 100.5677,
                'address': '‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤ ‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤',
                'province': '‡∏û‡∏£‡∏∞‡∏ô‡∏Ñ‡∏£‡∏®‡∏£‡∏µ‡∏≠‡∏¢‡∏∏‡∏ò‡∏¢‡∏≤',
                'category': 'sacred_tree',
                'lucky_numbers': '789, 012, 345',
                'highlights': '‡∏ï‡πâ‡∏ô‡πÇ‡∏û‡∏ò‡∏¥‡πå‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏Å‡πà, ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå, ‡∏ß‡∏±‡∏î‡∏°‡∏´‡∏≤‡∏ò‡∏≤‡∏ï‡∏∏',
            },
            {
                'name': '‡∏ñ‡πâ‡∏≥‡∏û‡∏ç‡∏≤‡∏ô‡∏≤‡∏Ñ',
                'description': '‡∏ñ‡πâ‡∏≥‡∏û‡∏ç‡∏≤‡∏ô‡∏≤‡∏Ñ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏û‡∏ç‡∏≤‡∏ô‡∏≤‡∏Ñ ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡∏Ñ‡∏ô‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏û‡∏ç‡∏≤‡∏ô‡∏≤‡∏Ñ‡∏Ñ‡∏≠‡∏¢‡∏õ‡∏Å‡∏õ‡∏±‡∏Å‡∏£‡∏±‡∏Å‡∏©‡∏≤ ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô‡∏°‡∏≤‡∏Ç‡∏≠‡∏û‡∏£‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î ‡πÇ‡∏î‡∏¢‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏≤‡∏á‡∏û‡∏∏‡∏ó‡∏ò‡∏®‡∏≤‡∏™‡∏ô‡∏≤',
                'latitude': 17.4138,
                'longitude': 102.7877,
                'address': '‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢ ‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢',
                'province': '‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢',
                'category': 'cave',
                'lucky_numbers': '369, 147, 258',
                'highlights': '‡∏ñ‡πâ‡∏≥‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå, ‡∏û‡∏ç‡∏≤‡∏ô‡∏≤‡∏Ñ, ‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô‡∏ó‡πâ‡∏≠‡∏á‡∏ñ‡∏¥‡πà‡∏ô',
            },
            {
                'name': '‡∏î‡∏≠‡∏¥‡∏™‡∏∏‡πÄ‡∏ó‡∏û',
                'description': '‡∏ß‡∏±‡∏î‡∏û‡∏£‡∏∞‡∏ò‡∏≤‡∏ï‡∏∏‡∏î‡∏≠‡∏¢‡∏™‡∏∏‡πÄ‡∏ó‡∏û ‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏£‡∏∞‡∏≠‡∏≤‡∏£‡∏≤‡∏°‡∏´‡∏•‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏î‡∏≠‡∏¢‡∏™‡∏∏‡πÄ‡∏ó‡∏û ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏Ç‡∏≠‡∏á‡∏†‡∏≤‡∏Ñ‡πÄ‡∏´‡∏ô‡∏∑‡∏≠ ‡∏ú‡∏π‡πâ‡∏°‡∏µ‡∏®‡∏£‡∏±‡∏ó‡∏ò‡∏≤‡∏°‡∏±‡∏Å‡∏°‡∏≤‡∏Å‡∏£‡∏≤‡∏ö‡πÑ‡∏´‡∏ß‡πâ‡∏û‡∏£‡∏∞‡∏ò‡∏≤‡∏ï‡∏∏‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏û‡∏£‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡πá‡∏î',
                'latitude': 18.8048,
                'longitude': 98.9217,
                'address': '‡∏™‡∏∏‡πÄ‡∏ó‡∏û ‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà ‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà',
                'province': '‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà',
                'category': 'mountain',
                'lucky_numbers': '181, 518, 899',
                'highlights': '‡∏û‡∏£‡∏∞‡∏ò‡∏≤‡∏ï‡∏∏‡∏î‡∏≠‡∏¢‡∏™‡∏∏‡πÄ‡∏ó‡∏û, ‡∏†‡∏π‡πÄ‡∏Ç‡∏≤‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå, ‡∏ß‡∏¥‡∏ß‡∏ó‡∏¥‡∏ß‡∏ó‡∏±‡∏®‡∏ô‡πå‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°',
            },
        ]
        
        for location_data in sample_locations:
            province = Province.objects.get(name=location_data['province'])
            category = LocationCategory.objects.get(name=location_data['category'])
            
            # Generate unique slug
            base_slug = slugify(location_data['name'])
            slug = base_slug
            counter = 1
            while LuckyLocation.objects.filter(slug=slug).exists():
                slug = f"{base_slug}-{counter}"
                counter += 1
            
            location, created = LuckyLocation.objects.get_or_create(
                name=location_data['name'],
                defaults={
                    'description': location_data['description'],
                    'latitude': location_data['latitude'],
                    'longitude': location_data['longitude'],
                    'address': location_data['address'],
                    'province': province,
                    'category': category,
                    'lucky_numbers': location_data['lucky_numbers'],
                    'highlights': location_data['highlights'],
                    'slug': slug,
                    'is_active': True,
                }
            )
            
            if created:
                self.stdout.write(f'Created location: {location_data["name"]}')
        
        self.stdout.write(
            self.style.SUCCESS('Successfully added sample lucky spots data!')
        )