# -*- coding: utf-8 -*-
import os
import sys
import django

# --- Setup Django ---
sys.path.append('/app')  # ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô Docker container ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô - ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ local database
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'lekdedai.settings')
django.setup()

from news.models import NewsArticle
from news.groq_lottery_analyzer import GroqLotteryAnalyzer

def test_fixed_analysis():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πà‡∏≤‡∏ß‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢ prompt ‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß"""
    
    print("=== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Groq Analyzer ===")
    print()
    
    # ‡∏´‡∏≤‡∏Ç‡πà‡∏≤‡∏ß‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà
    article = NewsArticle.objects.filter(title__contains='‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà').first()
    if not article:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πà‡∏≤‡∏ß‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà")
        return
    
    print(f"üì∞ ‡∏Ç‡πà‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡∏ó‡∏î‡∏™‡∏≠‡∏ö: {article.title}")
    print(f"üî¢ ‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡∏¥‡∏°: {article.extracted_numbers}")
    print()
    
    # ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢ Groq
    try:
        analyzer = GroqLotteryAnalyzer()
        result = analyzer.analyze_news_for_lottery(article.title, article.content)
        
        if result['success']:
            print("‚úÖ ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:")
            print(f"   üî¢ ‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡∏°‡πà: {', '.join(result['numbers'])}")
            print(f"   üìä ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {result.get('relevance_score', 0)}/100")
            print(f"   üìÇ ‡∏´‡∏°‡∏ß‡∏î: {result.get('category', 'other')}")
            print(f"   üí° ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: {result.get('reasoning', '')}")
            print()
            
            print("=== ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏•‡∏Ç‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ï‡∏±‡∏ß ===")
            for item in result.get('detailed_numbers', []):
                print(f"üî¢ {item['number']}: {item['source']} (confidence: {item['confidence']}%)")
            
            # ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡πÄ‡∏î‡∏¥‡∏°
            old_numbers = set(article.extracted_numbers.split(','))
            new_numbers = set(result['numbers'])
            
            print(f"\n=== ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö ===")
            print(f"üÜö ‡πÄ‡∏•‡∏Ç‡πÄ‡∏Å‡πà‡∏≤: {', '.join(old_numbers)}")
            print(f"üÜï ‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡∏°‡πà: {', '.join(new_numbers)}")
            
            # ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏•‡∏Ç 195
            if '195' in new_numbers:
                print("‚ö†Ô∏è ‡∏¢‡∏±‡∏á‡∏û‡∏ö‡πÄ‡∏•‡∏Ç 195 - ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°")
                # ‡∏´‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏Ç 195
                for item in result.get('detailed_numbers', []):
                    if item['number'] == '195':
                        print(f"   üí≠ ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ 195: {item['source']}")
            else:
                print("‚úÖ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏•‡∏Ç 195 ‡πÅ‡∏•‡πâ‡∏ß - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            
            # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            license_numbers = []
            for item in result.get('detailed_numbers', []):
                if '‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô' in item['source'] and item['number'] != '195':
                    license_numbers.append(f"{item['number']} ({item['source']})")
            
            if license_numbers:
                print(f"üöó ‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: {', '.join(license_numbers)}")
            else:
                print("üöó ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ‡πÉ‡∏ô‡∏Ç‡πà‡∏≤‡∏ß")
            
        else:
            print(f"‚ùå ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: {result.get('error', 'Unknown error')}")
            
    except Exception as e:
        print(f"‚ùå Error: {e}")

def main():
    test_fixed_analysis()
    print("\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!")

if __name__ == "__main__":
    main()